{
	"name": "Spark Notebook",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Spark1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "dfd96876-e602-4368-acce-e773c4207619"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"1688be5e-8d77-4c19-905b-1e49b966e230": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "2",
										"1": "2023-01-01 00:32:10",
										"2": "2023-01-01 00:40:36",
										"3": "1.0",
										"4": "0.97",
										"5": "1.0",
										"6": "N",
										"7": "161",
										"8": "141",
										"9": "2",
										"10": "9.3",
										"11": "1.0",
										"12": "0.5",
										"13": "0.0",
										"14": "0.0",
										"15": "1.0",
										"16": "14.3",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:55:08",
										"2": "2023-01-01 01:01:27",
										"3": "1.0",
										"4": "1.1",
										"5": "1.0",
										"6": "N",
										"7": "43",
										"8": "237",
										"9": "1",
										"10": "7.9",
										"11": "1.0",
										"12": "0.5",
										"13": "4.0",
										"14": "0.0",
										"15": "1.0",
										"16": "16.9",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:25:04",
										"2": "2023-01-01 00:37:49",
										"3": "1.0",
										"4": "2.51",
										"5": "1.0",
										"6": "N",
										"7": "48",
										"8": "238",
										"9": "1",
										"10": "14.9",
										"11": "1.0",
										"12": "0.5",
										"13": "15.0",
										"14": "0.0",
										"15": "1.0",
										"16": "34.9",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "1",
										"1": "2023-01-01 00:03:48",
										"2": "2023-01-01 00:13:25",
										"3": "0.0",
										"4": "1.9",
										"5": "1.0",
										"6": "N",
										"7": "138",
										"8": "7",
										"9": "1",
										"10": "12.1",
										"11": "7.25",
										"12": "0.5",
										"13": "0.0",
										"14": "0.0",
										"15": "1.0",
										"16": "20.85",
										"17": "0.0",
										"18": "1.25"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:10:29",
										"2": "2023-01-01 00:21:19",
										"3": "1.0",
										"4": "1.43",
										"5": "1.0",
										"6": "N",
										"7": "107",
										"8": "79",
										"9": "1",
										"10": "11.4",
										"11": "1.0",
										"12": "0.5",
										"13": "3.28",
										"14": "0.0",
										"15": "1.0",
										"16": "19.68",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:50:34",
										"2": "2023-01-01 01:02:52",
										"3": "1.0",
										"4": "1.84",
										"5": "1.0",
										"6": "N",
										"7": "161",
										"8": "137",
										"9": "1",
										"10": "12.8",
										"11": "1.0",
										"12": "0.5",
										"13": "10.0",
										"14": "0.0",
										"15": "1.0",
										"16": "27.8",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:09:22",
										"2": "2023-01-01 00:19:49",
										"3": "1.0",
										"4": "1.66",
										"5": "1.0",
										"6": "N",
										"7": "239",
										"8": "143",
										"9": "1",
										"10": "12.1",
										"11": "1.0",
										"12": "0.5",
										"13": "3.42",
										"14": "0.0",
										"15": "1.0",
										"16": "20.52",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:27:12",
										"2": "2023-01-01 00:49:56",
										"3": "1.0",
										"4": "11.7",
										"5": "1.0",
										"6": "N",
										"7": "142",
										"8": "200",
										"9": "1",
										"10": "45.7",
										"11": "1.0",
										"12": "0.5",
										"13": "10.74",
										"14": "3.0",
										"15": "1.0",
										"16": "64.44",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:21:44",
										"2": "2023-01-01 00:36:40",
										"3": "1.0",
										"4": "2.95",
										"5": "1.0",
										"6": "N",
										"7": "164",
										"8": "236",
										"9": "1",
										"10": "17.7",
										"11": "1.0",
										"12": "0.5",
										"13": "5.68",
										"14": "0.0",
										"15": "1.0",
										"16": "28.38",
										"17": "2.5",
										"18": "0.0"
									},
									{
										"0": "2",
										"1": "2023-01-01 00:39:42",
										"2": "2023-01-01 00:50:36",
										"3": "1.0",
										"4": "3.01",
										"5": "1.0",
										"6": "N",
										"7": "141",
										"8": "107",
										"9": "2",
										"10": "14.9",
										"11": "1.0",
										"12": "0.5",
										"13": "0.0",
										"14": "0.0",
										"15": "1.0",
										"16": "19.9",
										"17": "2.5",
										"18": "0.0"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "VendorID",
										"type": "bigint"
									},
									{
										"key": "1",
										"name": "tpep_pickup_datetime",
										"type": "timestamp"
									},
									{
										"key": "2",
										"name": "tpep_dropoff_datetime",
										"type": "timestamp"
									},
									{
										"key": "3",
										"name": "passenger_count",
										"type": "double"
									},
									{
										"key": "4",
										"name": "trip_distance",
										"type": "double"
									},
									{
										"key": "5",
										"name": "RatecodeID",
										"type": "double"
									},
									{
										"key": "6",
										"name": "store_and_fwd_flag",
										"type": "string"
									},
									{
										"key": "7",
										"name": "PULocationID",
										"type": "bigint"
									},
									{
										"key": "8",
										"name": "DOLocationID",
										"type": "bigint"
									},
									{
										"key": "9",
										"name": "payment_type",
										"type": "bigint"
									},
									{
										"key": "10",
										"name": "fare_amount",
										"type": "double"
									},
									{
										"key": "11",
										"name": "extra",
										"type": "double"
									},
									{
										"key": "12",
										"name": "mta_tax",
										"type": "double"
									},
									{
										"key": "13",
										"name": "tip_amount",
										"type": "double"
									},
									{
										"key": "14",
										"name": "tolls_amount",
										"type": "double"
									},
									{
										"key": "15",
										"name": "improvement_surcharge",
										"type": "double"
									},
									{
										"key": "16",
										"name": "total_amount",
										"type": "double"
									},
									{
										"key": "17",
										"name": "congestion_surcharge",
										"type": "double"
									},
									{
										"key": "18",
										"name": "airport_fee",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					},
					"e88f5d0b-4959-4176-aec8-aa6520d1948b": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "1.0",
										"1": "7548936.469999447",
										"2": "3.3835300927842877"
									},
									{
										"0": "2.0",
										"1": "1775011.1100000432",
										"2": "3.9695389772743486"
									},
									{
										"0": "3.0",
										"1": "389719.1599999981",
										"2": "3.7034634280772596"
									},
									{
										"0": "4.0",
										"1": "204907.15999999858",
										"2": "3.8946848627689232"
									},
									{
										"0": "5.0",
										"1": "140099.45999999894",
										"2": "3.2935905211932894"
									},
									{
										"0": "6.0",
										"1": "91430.08999999972",
										"2": "3.2610511110318408"
									},
									{
										"0": "7.0",
										"1": "25.43",
										"2": "5.086"
									},
									{
										"0": "8.0",
										"1": "55.52",
										"2": "7.9314285714285715"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "passenger_count",
										"type": "double"
									},
									{
										"key": "1",
										"name": "SumTripDistance",
										"type": "double"
									},
									{
										"key": "2",
										"name": "AvgTripDistance",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/898e66c4-4550-43c4-93a1-2d3c16932df2/resourceGroups/rg-synpasecicd-dev-eus/providers/Microsoft.Synapse/workspaces/sy-synapsecicd-dev-eus/bigDataPools/Spark1",
				"name": "Spark1",
				"type": "Spark",
				"endpoint": "https://sy-synapsecicd-dev-eus.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Spark1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://users@adlsynapsecicddeveus.dfs.core.windows.net/NYCTripSmall.parquet', format='parquet')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"spark.sql(\"CREATE DATABASE IF NOT EXISTS nyctaxi\")\r\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"nyctaxi.trip\")"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.sql(\"\"\"\r\n",
					"   SELECT passenger_count,\r\n",
					"       SUM(trip_distance) as SumTripDistance,\r\n",
					"       AVG(trip_distance) as AvgTripDistance\r\n",
					"   FROM nyctaxi.trip\r\n",
					"   WHERE trip_distance > 0 AND passenger_count > 0\r\n",
					"   GROUP BY passenger_count\r\n",
					"   ORDER BY passenger_count\r\n",
					"\"\"\") \r\n",
					"display(df)\r\n",
					"df.write.saveAsTable(\"nyctaxi.passengercountstats\")"
				],
				"execution_count": 3
			}
		]
	}
}